/**
 * @Cstone     
 * 
 * For this project I chose to take my adventure game code and make it better with timers and more endings.
 * This lead to some problems that were fixed with some tweaking and some help from the internet.
 */
import java.util.Scanner;

public class AdventureGame
{
    public static void main()
    {
       Scanner in = new Scanner(System.in);
               
        int goodCount = 0;
        
        int badCount = 0;
        
        int timesUp = 0;
        
        int success = 0;
        
        boolean game = false;
        
        boolean complete = false;
        
        
        System.out.println("Welcome to the game, press 1 to play.");
        String gameResponse = in.nextLine();
        
        if (gameResponse.equalsIgnoreCase("1"))
        {
         game = true;   
        }
        else
        {
            System.out.println("Hey idiot, I said press 1! You can't even follow directions!? WTF!");
        }
         //The above code asks the user if they want to play the game 
         
        while (game)
        {
            System.out.println("\u000C");
            //The above line of code clears text.
        while (!complete)
        {
         System.out.println("You have 90 seconds to complete this game, Good luck loser.");
         
        int time = 90;   
        
        
        
       
        long start_time = System.currentTimeMillis();
        long wait_time = time * 1000;
        long end_time = start_time + wait_time;
        /*
         * I got this code from stack overflow: 
         * https://stackoverflow.com/questions/19727109/how-to-exit-a-while-loop-after-a-certain-time
         */
        
        if (System.currentTimeMillis() >= end_time)
        {
            complete = true;
            timesUp++;
            break;
        }
        
        System.out.println();
        
        System.out.println("You wake up on a deserted island, you have no idea where you are. ");
        System.out.println("You only have a knife and the clothes on your back. ");
        
        System.out.println();
        System.out.println();
        
        System.out.println("You find a tree, press h to hit the tree.");
        System.out.println("Or decide it's a waste of time and press c to continue.");
        String snooze = in.nextLine();
        snooze = in.nextLine();
        
        if (System.currentTimeMillis() >= end_time)
        {
            complete = true;
            timesUp++;
            break;
        }
        
        if (snooze.equalsIgnoreCase("h"))
        {
          int x =(int) (Math.random()*3 + 1);
          //To add a random aspect to the game I decided to use a random integer generator.
          //This became very useful and I use it a lot throughout the code.
          {
              System.out.println("You hit the tree and 5 coconuts fell, how oddly convineient.");
              goodCount++;
            }
            if (x==2)
          {
             System.out.println("Nice one, now you're lost and your hand hurts.");
             badCount++;
            }
          else
          {
             System.out.println("Your look stupid, stop doing that.");
             complete = true;
             break;
            }
        }
        if (snooze.equalsIgnoreCase("u"))
        {
            System.out.println("Smart, who needs trees anyways.");
        }
        
        
        if (System.currentTimeMillis() >= end_time)
        {
            complete = true;
            timesUp++;
            break;
        }
        
        System.out.println();
        System.out.println();
        
        System.out.println("You find some dry brush and wood, try to make a fire? (Y/N)");
        String shower = in.nextLine();
        
        if (System.currentTimeMillis() >= end_time)
        {
            complete = true;
            timesUp++;
            break;
        }
        
        if (shower.equalsIgnoreCase("y"))
        {
          int y =(int) (Math.random()*2 + 1);
          if (y==1)
          {
          System.out.println("Eureka! You make a fire! You're still lost...and hungry...and ugly...");
          goodCount++;
        }
        else
        {
        System.out.println("You have no idea what you're doing, you should've joined boy scouts.");
        badCount++;
         }
        }
        if (shower.equalsIgnoreCase("n"))
        {
            System.out.println("You got a spark but no flame, you need better wood.");
        }
        //The above block of code checks to see the user's reponse to the second question, and determines what situation to describe.
        
        if (System.currentTimeMillis() >= end_time)
        {
            complete = true;
            timesUp++;
            break;
        }
        
        System.out.println();
        System.out.println();
        
        System.out.println("Now do you try to find edible plants or risk going hunting? (P/H)");
        
        String food = in.nextLine();
        
        if (System.currentTimeMillis() >= end_time)
        {
            complete = true;
            timesUp++;
            break;
        }
        
        if (food.equalsIgnoreCase("p"))
        {
            System.out.println("You find some plants but they don't have much nutritional value.");
            System.out.println("You are slowly starving.");   
        }
        if (food.equalsIgnoreCase("h"))
        {
            int z =(int) (Math.random()*2 + 1);
          if (z==1)
          {
              System.out.println("You look for some fresh meat, luckily someone left some meatballs on a plate.");
              goodCount++;
            }
          if (z==2)
          {
              System.out.println("You go into the jungle and try to befriend a tiger, it doesn't go well.");
              complete = true;
              break;
            }
        }
        
        
        if (System.currentTimeMillis() >= end_time)
        {
            complete = true;
            timesUp++;
            break;
        }
        
        System.out.println();
        System.out.println();
          
        System.out.println("You find an abandoned boat on the beach and ");
        System.out.println("a hill with promising features. Do you investigate the beach or the hill? (b/h)");
        String dec1 = in.nextLine();
        
        if (System.currentTimeMillis() >= end_time)
        {
            complete = true;
            timesUp++;
            break;
        }
        
        if (dec1.equalsIgnoreCase("h"))
        {
          int t =(int) (Math.random()*3 + 1);
          
          if(t == 1)
          {
             System.out.println("You climb the hill but it gets steeper and steeper. You lose your footing ");
             System.out.println("and plummet 100 feet to the ground.");
             complete = true;
             break;
            }
            
          else if (t == 2)
          {
              System.out.println("You notice how dangerous the climb would be on the hill so you take the long way, ");
              System.out.println("this takes longer but it is safer, you are weaker.");
              badCount++;
            }
          else
          {
             System.out.println("You use your rockclimbing experience to scale the hill with ease. ");
             goodCount++;
            }
        }
        if (dec1.equalsIgnoreCase("b"))
        {
            System.out.println("You go down to the beach and find some basic supplies like food and water. Thank god!");
            goodCount++;
        }
        
        
        if (System.currentTimeMillis() >= end_time)
        {
            complete = true;
            timesUp++;
            break;
        }
        
        System.out.println();
        System.out.println();
        
        System.out.println("As you wander around the island you find an old fort. There is a tower at the top ");
        System.out.println("with a telescope. You see another ship in the distance. ");
        System.out.println("Do you try and yell at the ship or find something to get it's attention? (y/f)");
        String ship = in.nextLine();
        
        if (System.currentTimeMillis() >= end_time)
        {
            complete = true;
            timesUp++;
            break;
        }
        
        
        if (ship.equalsIgnoreCase("r"))
        {
           int l =(int) (Math.random()*5 + 1);
           
           if (l == 1)
           {
               System.out.println("f");
               System.out.println("You try and throw a coconut at it, you miss...");
               complete = true;
               break;
            }
            
           else if (l == 2 || l ==3)
           {
             System.out.println("You  find a cone-shaped shell and yell through it like a megaphone.");
             System.out.println("The ship honks in response and makes it's way over, it is far away and will take awhile.");
             badCount+=2;
            }
           
            else if (l==4 || l == 5)
            {
              System.out.println("You find a shiny mirror and use it to flash morse code.");
              System.out.println("S.O.S. You spell with the mirror, the ship sees it and sends a lifeboat your way.");
              goodCount+=2;
            }
        }
        
        
        if (ship.equalsIgnoreCase("s"))
        {
         int s =(int) (Math.random()*2 + 1);
         
         if (s == 1)
         {
             System.out.println("Your booming voice travels over the sea and reaches the boat, he is going to save you.");
             badCount++;
            }
         if (s == 2)
         {
             System.out.println("Turns out the boat was already on it's way to the island, you are soon going to be saved.");
             goodCount++;
            }
        }
        
        System.out.println();
        System.out.println();
        
        System.out.println("Your salvation has arrived...");
        
        if (goodCount - badCount == 0)
        {
         System.out.println("You are a brave survivor and don't have a scratch on you!");
         success++;
         complete = true;
        }
        else if(goodCount - badCount > 0)
        {
         System.out.println("You are sad to leave your primitive camp for civilization!");
         success++;
         complete = true;
        }
        else
        {
          System.out.println("but you have starved before they arrived!");
          complete = true;
        }
        //The above block of code users my equation in order to determine whether or not the user was successful at beating the game.
    }
    
    System.out.println();
    
    if (complete)
    {
     if (success > 0)
     {
         System.out.println("Congratulations! You have beat the game!");
        }
     else
     {
     System.out.println("GAME OVER");  
    }
    //The above block of code tells the user whether they won or lost.
     System.out.println();
     
     if (timesUp >= 1)
     {
         System.out.println("You ran out of time!");
        }
     
     
     System.out.println();
     
     System.out.println("Do you want to play again (Y/N) ?");
     String play = in.nextLine();
     
     System.out.println();
     
     if (play.equalsIgnoreCase("y"))
     {
        complete = false;
        goodCount = 0;
        badCount = 0;
        timesUp = 0;
        success = 0;
        continue;
        //"Continue" restarts the loop.
        }
     else if (play.equalsIgnoreCase("n"))
     {
         System.out.println("Thanks for playing.");
         game = false;
         break;
        }
        //The above lines of code ask the user if they would like to play again and either restarts or officially ends the program.
    }   
}
    }
}
